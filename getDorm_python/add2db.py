import sqlite3

class DB:
    def __init__(self):
        self.cx = sqlite3.connect('dorm.db')
        self.cu = self.cx.cursor()
        sql = "CREATE TABLE IF NOT EXISTS `students` (`_id_` integer primary key autoincrement, `majorName` text, `studentType_remark` varchar(128), `studentType_available` varchar(128), `studentType_id` varchar(128), `studentType_typeName` text, `major_majorName` text, `major_remark` varchar(128), `major_available` varchar(128), `major_id` varchar(128), `major_mcode` text, `exitstate` text, `nationId_available` varchar(128), `nationId_adictName` text, `nationId_dictCode` varchar(128), `nationId_dictType` varchar(128), `examNum` varchar(128), `changeDate` text, `tfyy` text, `yfloorName` text, `gradeName` text, `familyAddress` text, `phone` varchar(128), `email` varchar(128), `id` varchar(128), `floorName` text, `enterDate` text, `bol` varchar(128), `opName` text, `occupancyDate` text, `remark` text, `tuidate` text, `name` text, `collegeName` text, `bedName` text, `lodgeState` varchar(128), `jsr` text, `grade_remark`  text, `grade_available` varchar(128), `grade_gradeName` varchar(128), `grade_id` varchar(128), `yareaName` text, `returnDate` text, `graduateDate` text, `xz` varchar(128), `className` text, `position` text, `gender` varchar(128), `ybedName` text, `brithday` text, `jjlxr`  text, `schoolClass_remark`  text, `schoolClass_available` varchar(128), `schoolClass_className` varchar(128), `schoolClass_id` varchar(128), `identity` varchar(128), `stuNum` varchar(128), `yfeebz` text, `buildName` text, `userName` text, `roomName` text, `graduatedCollege` text, `nativeId_dictCode` text, `nativeId_available` text,`nativeId_dictName` text,`nativeId_dictType` text,`jjlxrphone` text, `stutype` text, `bedIdBeforeStay` text, `exitMoney` text, `sex` text, `yroomName` text, `college_ccode` text, `college_parent` varchar(128), `college_remark` varchar(128), `college_parentName` text, `college_available` varchar(128), `college_collegeName` text, `college_id` varchar(128), `politics_dictType` text, `politics_available` text, `politics_dictName` text, `politics_dictCode` text, `feebz` text, `noDocument` text, `photo` text, `memberType` varchar(128), `cwbh` text, `areaName` text, `memberids` text, `yuanYin` text, `available` varchar(128), `ybuildName` text )"
        self.cu.execute(sql)
        self.cx.commit()
    def add(self,stu):
        sql = "INSERT INTO students("+  "majorName,studentType_remark,studentType_available,studentType_id,studentType_typeName,major_majorName,major_remark,major_available,major_id,major_mcode,exitstate,nationId_available,nationId_adictName,nationId_dictCode,nationId_dictType,examNum,changeDate,tfyy,yfloorName,gradeName,familyAddress,phone,email,id,floorName,enterDate,bol,opName,occupancyDate,remark,tuidate,name,collegeName,bedName,lodgeState,jsr,grade_remark,grade_available,grade_gradeName,grade_id,yareaName,returnDate,graduateDate,xz,className,position,gender,ybedName,brithday,jjlxr,schoolClass_remark,schoolClass_available,schoolClass_className,schoolClass_id,identity,stuNum,yfeebz,buildName,userName,roomName,graduatedCollege,nativeId_dictCode,nativeId_available,nativeId_dictName,nativeId_dictType,jjlxrphone,stutype,bedIdBeforeStay,exitMoney,sex,yroomName,college_ccode,college_parent,college_remark,college_parentName,college_available,college_collegeName,college_id,politics_dictType,politics_available,politics_dictName,politics_dictCode,feebz,noDocument,photo,memberType,cwbh,areaName,memberids,yuanYin,available,ybuildName"  +") VALUES(" + "'" + str(stu['majorName']) + "'," + "'" + str(stu['studentType_remark']) + "'," + "'" + str(stu['studentType_available']) + "'," + "'" + str(stu['studentType_id']) + "'," + "'" + str(stu['studentType_typeName']) + "'," + "'" + str(stu['major_majorName']) + "'," + "'" + str(stu['major_remark']) + "'," + "'" + str(stu['major_available']) + "'," + "'" + str(stu['major_id']) + "'," + "'" + str(stu['major_mcode']) + "'," + "'" + str(stu['exitstate']) + "'," + "'" + str(stu['nationId_available']) + "'," + "'" + str(stu['nationId_adictName']) + "'," + "'" + str(stu['nationId_dictCode']) + "'," + "'" + str(stu['nationId_dictType']) + "'," + "'" + str(stu['examNum']) + "'," + "'" + str(stu['changeDate']) + "'," + "'" + str(stu['tfyy']) + "'," + "'" + str(stu['yfloorName']) + "'," + "'" + str(stu['gradeName']) + "'," + "'" + str(stu['familyAddress']) + "'," + "'" + str(stu['phone']) + "'," + "'" + str(stu['email']) + "'," + "'" + str(stu['id']) + "'," + "'" + str(stu['floorName']) + "'," + "'" + str(stu['enterDate']) + "'," + "'" + str(stu['bol']) + "'," + "'" + str(stu['opName']) + "'," + "'" + str(stu['occupancyDate']) + "'," + "'" + str(stu['remark']) + "'," + "'" + str(stu['tuidate']) + "'," + "'" + str(stu['name']) + "'," + "'" + str(stu['collegeName']) + "'," + "'" + str(stu['bedName']) + "'," + "'" + str(stu['lodgeState']) + "'," + "'" + str(stu['jsr']) + "'," + "'" + str(stu['grade_remark']) + "'," + "'" + str(stu['grade_available']) + "'," + "'" + str(stu['grade_gradeName']) + "'," + "'" + str(stu['grade_id']) + "'," + "'" + str(stu['yareaName']) + "'," + "'" + str(stu['returnDate']) + "'," + "'" + str(stu['graduateDate']) + "'," + "'" + str(stu['xz']) + "'," + "'" + str(stu['className']) + "'," + "'" + str(stu['position']) + "'," + "'" + str(stu['gender']) + "'," + "'" + str(stu['ybedName']) + "'," + "'" + str(stu['brithday']) + "'," + "'" + str(stu['jjlxr']) + "'," + "'" + str(stu['schoolClass_remark']) + "'," + "'" + str(stu['schoolClass_available']) + "'," + "'" + str(stu['schoolClass_className']) + "'," + "'" + str(stu['schoolClass_id']) + "'," + "'" + str(stu['identity']) + "'," + "'" + str(stu['stuNum']) + "'," + "'" + str(stu['yfeebz']) + "'," + "'" + str(stu['buildName']) + "'," + "'" + str(stu['userName']) + "'," + "'" + str(stu['roomName']) + "'," + "'" + str(stu['graduatedCollege']) + "'," + "'" + str(stu['nativeId_dictCode']) + "'," + "'" + str(stu['nativeId_available']) + "'," + "'" + str(stu['nativeId_dictName']) + "'," + "'" + str(stu['nativeId_dictType']) + "'," + "'" + str(stu['jjlxrphone']) + "'," + "'" + str(stu['stutype']) + "'," + "'" + str(stu['bedIdBeforeStay']) + "'," + "'" + str(stu['exitMoney']) + "'," + "'" + str(stu['sex']) + "'," + "'" + str(stu['yroomName']) + "'," + "'" + str(stu['college_ccode']) + "'," + "'" + str(stu['college_parent']) + "'," + "'" + str(stu['college_remark']) + "'," + "'" + str(stu['college_parentName']) + "'," + "'" + str(stu['college_available']) + "'," + "'" + str(stu['college_collegeName']) + "'," + "'" + str(stu['college_id']) + "'," + "'" + str(stu['politics_dictType']) + "'," + "'" + str(stu['politics_available']) + "'," + "'" + str(stu['politics_dictName']) + "'," + "'" + str(stu['politics_dictCode']) + "'," + "'" + str(stu['feebz']) + "'," + "'" + str(stu['noDocument']) + "'," + "'" + str(stu['photo']) + "'," + "'" + str(stu['memberType']) + "'," + "'" + str(stu['cwbh']) + "'," + "'" + str(stu['areaName']) + "'," + "'" + str(stu['memberids']) + "'," + "'" + str(stu['yuanYin']) + "'," + "'" + str(stu['available']) + "'," + "'" + str(stu['ybuildName']) + "'" +");"
        # print (sql)
        self.cu.execute(sql)
        self.cx.commit()
